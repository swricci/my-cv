devtools::install_github("nstrayer/datadrivencv")
datadrivencv::use_datadriven_cv(
full_name = "Shannon Ricci",
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=917338460",
pdf_location = "https://github.com/swricci/my-cv/blob/main/ricci_cv.pdf",
html_location = "https://swricci.github.io/my-cv/",
source_location = "https://github.com/swricci/my-cv")
library(datadrivencv0
)
library(datadrivencv)
?datadrivencv
install.packages('datadrivencv')
# install.packages("devtools")
devtools::install_github("nstrayer/datadrivencv")
devtools::install_github("nstrayer/datadrivencv")
remotes::install_github("nstrayer/datadrivencv#60")
datadrivencv::use_datadriven_cv(
full_name = "Shannon Ricci",
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=917338460",
pdf_location = "https://github.com/swricci/my-cv/blob/main/ricci_cv.pdf",
html_location = "https://swricci.github.io/my-cv/",
source_location = "https://github.com/swricci/my-cv")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=917338460",
pdf_mode = params$pdf_mode
)
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=340636497",
pdf_mode = params$pdf_mode
)
?sheets_deauth
?googlesheets4:sheets_deauth
?googlesheets4::sheets_deauth
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=340636497",
pdf_mode = params$pdf_mode
)
CV %<>% print_section('academic_articles')
View(CV)
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=340636497",
pdf_mode = params$pdf_mode
)
CV %<>% print_section('academic_articles')
rlang::last_error()
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=340636497",
pdf_mode = params$pdf_mode
)
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=340636497",
pdf_mode = params$pdf_mode
)
CV %<>% print_section('academic_articles')
CV %<>% print_section('research_positions')
knitr::opts_chunk$set(
results='asis',
echo = FALSE
)
library(magrittr) # For the pipe
source("cv_printing_functions.r")
# Read in all data and initialize a CV printer object
CV <- create_CV_object(
data_location = "https://docs.google.com/spreadsheets/d/1LqX7AzJDC03nr9K6mF6LdEPIoHdADBuLbi_IDqlKTnc/edit#gid=340636497",
pdf_mode = params$pdf_mode
)
CV %<>% print_section('academic_articles')
cv = CV
section_id = "academic_articles"
glue_template = "default"
if(glue_template == "default"){
glue_template <- "
### {title}
{loc}
{institution}
{timeline}
{description_bullets}
\n\n\n"
}
section_data <- dplyr::filter(cv$entries_data, section == section_id)
View(section_data)
# Take entire entries data frame and removes the links in descending order
# so links for the same position are right next to each other in number.
for(i in 1:nrow(section_data)){
for(col in c('title', 'description_bullets')){
strip_res <- sanitize_links(cv, section_data[i, col])
section_data[i, col] <- strip_res$text
cv <- strip_res$cv
}
}
View(strip_res)
View(section_data)
View(strip_res)
View(cv)
View(section_data)
section_data$title[4] <- "[Oyster toadfish Opsanus tau boatwhistle call detec](http://link.com)"
# Take entire entries data frame and removes the links in descending order
# so links for the same position are right next to each other in number.
for(i in 1:nrow(section_data)){
for(col in c('title', 'description_bullets')){
strip_res <- sanitize_links(cv, section_data[i, col])
section_data[i, col] <- strip_res$text
cv <- strip_res$cv
}
}
cv = CV
section_id = "community_engagement"
glue_template = "default"
if(glue_template == "default"){
glue_template <- "
### {title}
{loc}
{institution}
{timeline}
{description_bullets}
\n\n\n"
}
section_data <- dplyr::filter(cv$entries_data, section == section_id)
# Take entire entries data frame and removes the links in descending order
# so links for the same position are right next to each other in number.
for(i in 1:nrow(section_data)){
for(col in c('title', 'description_bullets')){
strip_res <- sanitize_links(cv, section_data[i, col])
section_data[i, col] <- strip_res$text
cv <- strip_res$cv
}
}
print(glue::glue_data(section_data, glue_template))
CV %>% print_skill_bars()
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
View(CV)
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
tmp_html_cv_loc
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "cv.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
# Knit the HTML version
rmarkdown::render("cv.rmd",
params = list(pdf_mode = FALSE),
output_file = "index.html")
# Knit the PDF version to temporary html location
tmp_html_cv_loc <- fs::file_temp(ext = ".html")
rmarkdown::render("cv.rmd",
params = list(pdf_mode = TRUE),
output_file = tmp_html_cv_loc)
# Convert to PDF using Pagedown
pagedown::chrome_print(input = tmp_html_cv_loc,
output = "cv.pdf")
